Non-terminaux inutiles dans la grammaire

    logical_operation2
    programme
    liste_blocs
    liste_id_dec
    listeID
    bracket


Terminaux inutilisés dans la grammaire

    tNOT


Règles inutiles dans la grammaire

   78 logical_operation2: liste_math_operations logical_operator liste_math_operations
   79                   | tNOT logical_operation

   80 programme: liste_blocs

   81 liste_blocs: bloc
   82            | bloc liste_blocs

   83 liste_id_dec: tINT tID tCOMMA liste_id_dec

   84 listeID: tID
   85        | tID listeID

   86 initialisation_variable: tINT liste_id_dec tASSIGN liste_math_operations tSEMI

   87 bracket: tLBRACE
   88        | tRBRACE


Règles inutiles dans l'analyseur à cause de conflits

   27 liste_math_operations: math_operation


État 49 conflits: 4 décalage/réduction, 2 réduction/réduction
État 111 conflits: 4 décalage/réduction
État 127 conflits: 1 décalage/réduction


Grammaire

    0 $accept: declaration_fonctions $end

    1 operand: tNB
    2        | math_operation
    3        | tID

    4 logical_operator: tLT
    5                 | tGT
    6                 | tEQ
    7                 | tGE
    8                 | tLE

    9 logical_operation: tID logical_operator tID
   10                  | tNB logical_operator tID
   11                  | tID logical_operator tNB

   12 andORdiff: %empty
   13          | tAND
   14          | tOR
   15          | tNE

   16 liste_logical_operations: logical_operation
   17                         | tLPAR liste_logical_operations tRPAR andORdiff tLPAR liste_logical_operations tRPAR
   18                         | logical_operation liste_logical_operations

   19 math_operator: tADD
   20              | tSUB
   21              | tMUL
   22              | tDIV

   23 $@1: %empty

   24 math_operation: operand math_operator $@1 operand
   25               | appel_fonction

   26 liste_math_operations: operand
   27                      | math_operation
   28                      | math_operation math_operator liste_math_operations

   29 my_return: tRETURN liste_math_operations tSEMI

   30 my_else: %empty
   31        | tELSE bloc

   32 $@2: %empty

   33 $@3: %empty

   34 my_if: tIF tLPAR liste_logical_operations tRPAR $@2 bloc $@3 my_else

   35 $@4: %empty

   36 $@5: %empty

   37 my_while: tWHILE $@4 tLPAR liste_logical_operations tRPAR $@5 bloc

   38 $@6: %empty

   39 print: tPRINT tLPAR $@6 liste_math_operations tRPAR tSEMI

   40 declaration_variable: tINT tID tSEMI

   41 initialisation_variable: tINT tID tASSIGN liste_math_operations tSEMI

   42 $@7: %empty

   43 affectation_variable: tID $@7 tASSIGN liste_math_operations tSEMI

   44 declaration_fonctions: declaration_fonction
   45                      | declaration_fonction declaration_fonctions

   46 $@8: %empty

   47 $@9: %empty

   48 declaration_fonction: tINT tID $@8 tLPAR liste_parametres_declaration $@9 tRPAR bloc

   49 $@10: %empty

   50 declaration_fonction: tVOID tID $@10 tLPAR liste_parametres_declaration tRPAR bloc

   51 $@11: %empty

   52 appel_fonction: tID tLPAR liste_parametres_appel $@11 tRPAR

   53 $@12: %empty

   54 appel_fonction_void: tID tLPAR liste_parametres_appel $@12 tRPAR tSEMI

   55 instruction: declaration_variable
   56            | affectation_variable
   57            | initialisation_variable
   58            | declaration_fonction
   59            | appel_fonction_void
   60            | my_if
   61            | my_while
   62            | print
   63            | my_return

   64 liste_instructions: instruction
   65                   | instruction liste_instructions

   66 bloc: instruction
   67     | tLBRACE liste_instructions tRBRACE

   68 parametre_declaration: tINT tID
   69                      | tVOID

   70 liste_parametres_declaration: parametre_declaration
   71                             | parametre_declaration tCOMMA liste_parametres_declaration

   72 parametre_appel: tINT operand
   73                | operand
   74                | tVOID

   75 liste_parametres_appel: parametre_appel

   76 $@13: %empty

   77 liste_parametres_appel: parametre_appel $@13 tCOMMA liste_parametres_appel


Terminaux, suivis des règles où ils apparaissent

    $end (0) 0
    error (256)
    tIF (258) 34
    tELSE (259) 31
    tWHILE (260) 37
    tPRINT (261) 39
    tRETURN (262) 29
    tINT (263) 40 41 48 68 72
    tVOID (264) 50 69 74
    tADD (265) 19
    tSUB (266) 20
    tMUL (267) 21
    tDIV (268) 22
    tLT (269) 4
    tGT (270) 5
    tNE (271) 15
    tEQ (272) 6
    tGE (273) 7
    tLE (274) 8
    tASSIGN (275) 41 43
    tAND (276) 13
    tOR (277) 14
    tNOT (278)
    tLBRACE (279) 67
    tRBRACE (280) 67
    tLPAR (281) 17 34 37 39 48 50 52 54
    tRPAR (282) 17 34 37 39 48 50 52 54
    tSEMI (283) 29 39 40 41 43 54
    tCOMMA (284) 71 77
    tID <s> (285) 3 9 10 11 40 41 43 48 50 52 54 68
    tNB <t_int> (286) 1 10 11


Non-terminaux, suivis des règles où ils apparaissent

    $accept (32)
        à gauche: 0
    operand <s> (33)
        à gauche: 1 2 3
        à droite: 24 26 72 73
    logical_operator <s> (34)
        à gauche: 4 5 6 7 8
        à droite: 9 10 11
    logical_operation (35)
        à gauche: 9 10 11
        à droite: 16 18
    andORdiff <s> (36)
        à gauche: 12 13 14 15
        à droite: 17
    liste_logical_operations (37)
        à gauche: 16 17 18
        à droite: 17 18 34 37
    math_operator (38)
        à gauche: 19 20 21 22
        à droite: 24 28
    math_operation (39)
        à gauche: 24 25
        à droite: 2 27 28
    $@1 (40)
        à gauche: 23
        à droite: 24
    liste_math_operations (41)
        à gauche: 26 27 28
        à droite: 28 29 39 41 43
    my_return (42)
        à gauche: 29
        à droite: 63
    my_else <t_int> (43)
        à gauche: 30 31
        à droite: 34
    my_if (44)
        à gauche: 34
        à droite: 60
    $@2 (45)
        à gauche: 32
        à droite: 34
    $@3 (46)
        à gauche: 33
        à droite: 34
    my_while (47)
        à gauche: 37
        à droite: 61
    $@4 (48)
        à gauche: 35
        à droite: 37
    $@5 (49)
        à gauche: 36
        à droite: 37
    print (50)
        à gauche: 39
        à droite: 62
    $@6 (51)
        à gauche: 38
        à droite: 39
    declaration_variable (52)
        à gauche: 40
        à droite: 55
    initialisation_variable (53)
        à gauche: 41
        à droite: 57
    affectation_variable (54)
        à gauche: 43
        à droite: 56
    $@7 (55)
        à gauche: 42
        à droite: 43
    declaration_fonctions (56)
        à gauche: 44 45
        à droite: 0 45
    declaration_fonction (57)
        à gauche: 48 50
        à droite: 44 45 58
    $@8 (58)
        à gauche: 46
        à droite: 48
    $@9 (59)
        à gauche: 47
        à droite: 48
    $@10 (60)
        à gauche: 49
        à droite: 50
    appel_fonction (61)
        à gauche: 52
        à droite: 25
    $@11 (62)
        à gauche: 51
        à droite: 52
    appel_fonction_void (63)
        à gauche: 54
        à droite: 59
    $@12 (64)
        à gauche: 53
        à droite: 54
    instruction (65)
        à gauche: 55 56 57 58 59 60 61 62 63
        à droite: 64 65 66
    liste_instructions (66)
        à gauche: 64 65
        à droite: 65 67
    bloc (67)
        à gauche: 66 67
        à droite: 31 34 37 48 50
    parametre_declaration (68)
        à gauche: 68 69
        à droite: 70 71
    liste_parametres_declaration (69)
        à gauche: 70 71
        à droite: 48 50 71
    parametre_appel <s> (70)
        à gauche: 72 73 74
        à droite: 75 77
    liste_parametres_appel (71)
        à gauche: 75 77
        à droite: 52 54 77
    $@13 (72)
        à gauche: 76
        à droite: 77


État 0

    0 $accept: . declaration_fonctions $end

    tINT   décalage et aller à l'état 1
    tVOID  décalage et aller à l'état 2

    declaration_fonctions  aller à l'état 3
    declaration_fonction   aller à l'état 4


État 1

   48 declaration_fonction: tINT . tID $@8 tLPAR liste_parametres_declaration $@9 tRPAR bloc

    tID  décalage et aller à l'état 5


État 2

   50 declaration_fonction: tVOID . tID $@10 tLPAR liste_parametres_declaration tRPAR bloc

    tID  décalage et aller à l'état 6


État 3

    0 $accept: declaration_fonctions . $end

    $end  décalage et aller à l'état 7


État 4

   44 declaration_fonctions: declaration_fonction .
   45                      | declaration_fonction . declaration_fonctions

    tINT   décalage et aller à l'état 1
    tVOID  décalage et aller à l'état 2

    $défaut  réduction par utilisation de la règle 44 (declaration_fonctions)

    declaration_fonctions  aller à l'état 8
    declaration_fonction   aller à l'état 4


État 5

   48 declaration_fonction: tINT tID . $@8 tLPAR liste_parametres_declaration $@9 tRPAR bloc

    $défaut  réduction par utilisation de la règle 46 ($@8)

    $@8  aller à l'état 9


État 6

   50 declaration_fonction: tVOID tID . $@10 tLPAR liste_parametres_declaration tRPAR bloc

    $défaut  réduction par utilisation de la règle 49 ($@10)

    $@10  aller à l'état 10


État 7

    0 $accept: declaration_fonctions $end .

    $défaut  accepter


État 8

   45 declaration_fonctions: declaration_fonction declaration_fonctions .

    $défaut  réduction par utilisation de la règle 45 (declaration_fonctions)


État 9

   48 declaration_fonction: tINT tID $@8 . tLPAR liste_parametres_declaration $@9 tRPAR bloc

    tLPAR  décalage et aller à l'état 11


État 10

   50 declaration_fonction: tVOID tID $@10 . tLPAR liste_parametres_declaration tRPAR bloc

    tLPAR  décalage et aller à l'état 12


État 11

   48 declaration_fonction: tINT tID $@8 tLPAR . liste_parametres_declaration $@9 tRPAR bloc

    tINT   décalage et aller à l'état 13
    tVOID  décalage et aller à l'état 14

    parametre_declaration         aller à l'état 15
    liste_parametres_declaration  aller à l'état 16


État 12

   50 declaration_fonction: tVOID tID $@10 tLPAR . liste_parametres_declaration tRPAR bloc

    tINT   décalage et aller à l'état 13
    tVOID  décalage et aller à l'état 14

    parametre_declaration         aller à l'état 15
    liste_parametres_declaration  aller à l'état 17


État 13

   68 parametre_declaration: tINT . tID

    tID  décalage et aller à l'état 18


État 14

   69 parametre_declaration: tVOID .

    $défaut  réduction par utilisation de la règle 69 (parametre_declaration)


État 15

   70 liste_parametres_declaration: parametre_declaration .
   71                             | parametre_declaration . tCOMMA liste_parametres_declaration

    tCOMMA  décalage et aller à l'état 19

    $défaut  réduction par utilisation de la règle 70 (liste_parametres_declaration)


État 16

   48 declaration_fonction: tINT tID $@8 tLPAR liste_parametres_declaration . $@9 tRPAR bloc

    $défaut  réduction par utilisation de la règle 47 ($@9)

    $@9  aller à l'état 20


État 17

   50 declaration_fonction: tVOID tID $@10 tLPAR liste_parametres_declaration . tRPAR bloc

    tRPAR  décalage et aller à l'état 21


État 18

   68 parametre_declaration: tINT tID .

    $défaut  réduction par utilisation de la règle 68 (parametre_declaration)


État 19

   71 liste_parametres_declaration: parametre_declaration tCOMMA . liste_parametres_declaration

    tINT   décalage et aller à l'état 13
    tVOID  décalage et aller à l'état 14

    parametre_declaration         aller à l'état 15
    liste_parametres_declaration  aller à l'état 22


État 20

   48 declaration_fonction: tINT tID $@8 tLPAR liste_parametres_declaration $@9 . tRPAR bloc

    tRPAR  décalage et aller à l'état 23


État 21

   50 declaration_fonction: tVOID tID $@10 tLPAR liste_parametres_declaration tRPAR . bloc

    tIF      décalage et aller à l'état 24
    tWHILE   décalage et aller à l'état 25
    tPRINT   décalage et aller à l'état 26
    tRETURN  décalage et aller à l'état 27
    tINT     décalage et aller à l'état 28
    tVOID    décalage et aller à l'état 2
    tLBRACE  décalage et aller à l'état 29
    tID      décalage et aller à l'état 30

    my_return                aller à l'état 31
    my_if                    aller à l'état 32
    my_while                 aller à l'état 33
    print                    aller à l'état 34
    declaration_variable     aller à l'état 35
    initialisation_variable  aller à l'état 36
    affectation_variable     aller à l'état 37
    declaration_fonction     aller à l'état 38
    appel_fonction_void      aller à l'état 39
    instruction              aller à l'état 40
    bloc                     aller à l'état 41


État 22

   71 liste_parametres_declaration: parametre_declaration tCOMMA liste_parametres_declaration .

    $défaut  réduction par utilisation de la règle 71 (liste_parametres_declaration)


État 23

   48 declaration_fonction: tINT tID $@8 tLPAR liste_parametres_declaration $@9 tRPAR . bloc

    tIF      décalage et aller à l'état 24
    tWHILE   décalage et aller à l'état 25
    tPRINT   décalage et aller à l'état 26
    tRETURN  décalage et aller à l'état 27
    tINT     décalage et aller à l'état 28
    tVOID    décalage et aller à l'état 2
    tLBRACE  décalage et aller à l'état 29
    tID      décalage et aller à l'état 30

    my_return                aller à l'état 31
    my_if                    aller à l'état 32
    my_while                 aller à l'état 33
    print                    aller à l'état 34
    declaration_variable     aller à l'état 35
    initialisation_variable  aller à l'état 36
    affectation_variable     aller à l'état 37
    declaration_fonction     aller à l'état 38
    appel_fonction_void      aller à l'état 39
    instruction              aller à l'état 40
    bloc                     aller à l'état 42


État 24

   34 my_if: tIF . tLPAR liste_logical_operations tRPAR $@2 bloc $@3 my_else

    tLPAR  décalage et aller à l'état 43


État 25

   37 my_while: tWHILE . $@4 tLPAR liste_logical_operations tRPAR $@5 bloc

    $défaut  réduction par utilisation de la règle 35 ($@4)

    $@4  aller à l'état 44


État 26

   39 print: tPRINT . tLPAR $@6 liste_math_operations tRPAR tSEMI

    tLPAR  décalage et aller à l'état 45


État 27

   29 my_return: tRETURN . liste_math_operations tSEMI

    tID  décalage et aller à l'état 46
    tNB  décalage et aller à l'état 47

    operand                aller à l'état 48
    math_operation         aller à l'état 49
    liste_math_operations  aller à l'état 50
    appel_fonction         aller à l'état 51


État 28

   40 declaration_variable: tINT . tID tSEMI
   41 initialisation_variable: tINT . tID tASSIGN liste_math_operations tSEMI
   48 declaration_fonction: tINT . tID $@8 tLPAR liste_parametres_declaration $@9 tRPAR bloc

    tID  décalage et aller à l'état 52


État 29

   67 bloc: tLBRACE . liste_instructions tRBRACE

    tIF      décalage et aller à l'état 24
    tWHILE   décalage et aller à l'état 25
    tPRINT   décalage et aller à l'état 26
    tRETURN  décalage et aller à l'état 27
    tINT     décalage et aller à l'état 28
    tVOID    décalage et aller à l'état 2
    tID      décalage et aller à l'état 30

    my_return                aller à l'état 31
    my_if                    aller à l'état 32
    my_while                 aller à l'état 33
    print                    aller à l'état 34
    declaration_variable     aller à l'état 35
    initialisation_variable  aller à l'état 36
    affectation_variable     aller à l'état 37
    declaration_fonction     aller à l'état 38
    appel_fonction_void      aller à l'état 39
    instruction              aller à l'état 53
    liste_instructions       aller à l'état 54


État 30

   43 affectation_variable: tID . $@7 tASSIGN liste_math_operations tSEMI
   54 appel_fonction_void: tID . tLPAR liste_parametres_appel $@12 tRPAR tSEMI

    tLPAR  décalage et aller à l'état 55

    $défaut  réduction par utilisation de la règle 42 ($@7)

    $@7  aller à l'état 56


État 31

   63 instruction: my_return .

    $défaut  réduction par utilisation de la règle 63 (instruction)


État 32

   60 instruction: my_if .

    $défaut  réduction par utilisation de la règle 60 (instruction)


État 33

   61 instruction: my_while .

    $défaut  réduction par utilisation de la règle 61 (instruction)


État 34

   62 instruction: print .

    $défaut  réduction par utilisation de la règle 62 (instruction)


État 35

   55 instruction: declaration_variable .

    $défaut  réduction par utilisation de la règle 55 (instruction)


État 36

   57 instruction: initialisation_variable .

    $défaut  réduction par utilisation de la règle 57 (instruction)


État 37

   56 instruction: affectation_variable .

    $défaut  réduction par utilisation de la règle 56 (instruction)


État 38

   58 instruction: declaration_fonction .

    $défaut  réduction par utilisation de la règle 58 (instruction)


État 39

   59 instruction: appel_fonction_void .

    $défaut  réduction par utilisation de la règle 59 (instruction)


État 40

   66 bloc: instruction .

    $défaut  réduction par utilisation de la règle 66 (bloc)


État 41

   50 declaration_fonction: tVOID tID $@10 tLPAR liste_parametres_declaration tRPAR bloc .

    $défaut  réduction par utilisation de la règle 50 (declaration_fonction)


État 42

   48 declaration_fonction: tINT tID $@8 tLPAR liste_parametres_declaration $@9 tRPAR bloc .

    $défaut  réduction par utilisation de la règle 48 (declaration_fonction)


État 43

   34 my_if: tIF tLPAR . liste_logical_operations tRPAR $@2 bloc $@3 my_else

    tLPAR  décalage et aller à l'état 57
    tID    décalage et aller à l'état 58
    tNB    décalage et aller à l'état 59

    logical_operation         aller à l'état 60
    liste_logical_operations  aller à l'état 61


État 44

   37 my_while: tWHILE $@4 . tLPAR liste_logical_operations tRPAR $@5 bloc

    tLPAR  décalage et aller à l'état 62


État 45

   39 print: tPRINT tLPAR . $@6 liste_math_operations tRPAR tSEMI

    $défaut  réduction par utilisation de la règle 38 ($@6)

    $@6  aller à l'état 63


État 46

    3 operand: tID .
   52 appel_fonction: tID . tLPAR liste_parametres_appel $@11 tRPAR

    tLPAR  décalage et aller à l'état 64

    $défaut  réduction par utilisation de la règle 3 (operand)


État 47

    1 operand: tNB .

    $défaut  réduction par utilisation de la règle 1 (operand)


État 48

   24 math_operation: operand . math_operator $@1 operand
   26 liste_math_operations: operand .

    tADD  décalage et aller à l'état 65
    tSUB  décalage et aller à l'état 66
    tMUL  décalage et aller à l'état 67
    tDIV  décalage et aller à l'état 68

    $défaut  réduction par utilisation de la règle 26 (liste_math_operations)

    math_operator  aller à l'état 69


État 49

    2 operand: math_operation .
   27 liste_math_operations: math_operation .
   28                      | math_operation . math_operator liste_math_operations

    tADD  décalage et aller à l'état 65
    tSUB  décalage et aller à l'état 66
    tMUL  décalage et aller à l'état 67
    tDIV  décalage et aller à l'état 68

    tADD      [réduction par utilisation de la règle 2 (operand)]
    tSUB      [réduction par utilisation de la règle 2 (operand)]
    tMUL      [réduction par utilisation de la règle 2 (operand)]
    tDIV      [réduction par utilisation de la règle 2 (operand)]
    tRPAR     réduction par utilisation de la règle 2 (operand)
    tRPAR     [réduction par utilisation de la règle 27 (liste_math_operations)]
    tSEMI     réduction par utilisation de la règle 2 (operand)
    tSEMI     [réduction par utilisation de la règle 27 (liste_math_operations)]
    $défaut  réduction par utilisation de la règle 2 (operand)

    math_operator  aller à l'état 70


État 50

   29 my_return: tRETURN liste_math_operations . tSEMI

    tSEMI  décalage et aller à l'état 71


État 51

   25 math_operation: appel_fonction .

    $défaut  réduction par utilisation de la règle 25 (math_operation)


État 52

   40 declaration_variable: tINT tID . tSEMI
   41 initialisation_variable: tINT tID . tASSIGN liste_math_operations tSEMI
   48 declaration_fonction: tINT tID . $@8 tLPAR liste_parametres_declaration $@9 tRPAR bloc

    tASSIGN  décalage et aller à l'état 72
    tSEMI    décalage et aller à l'état 73

    $défaut  réduction par utilisation de la règle 46 ($@8)

    $@8  aller à l'état 9


État 53

   64 liste_instructions: instruction .
   65                   | instruction . liste_instructions

    tIF      décalage et aller à l'état 24
    tWHILE   décalage et aller à l'état 25
    tPRINT   décalage et aller à l'état 26
    tRETURN  décalage et aller à l'état 27
    tINT     décalage et aller à l'état 28
    tVOID    décalage et aller à l'état 2
    tID      décalage et aller à l'état 30

    $défaut  réduction par utilisation de la règle 64 (liste_instructions)

    my_return                aller à l'état 31
    my_if                    aller à l'état 32
    my_while                 aller à l'état 33
    print                    aller à l'état 34
    declaration_variable     aller à l'état 35
    initialisation_variable  aller à l'état 36
    affectation_variable     aller à l'état 37
    declaration_fonction     aller à l'état 38
    appel_fonction_void      aller à l'état 39
    instruction              aller à l'état 53
    liste_instructions       aller à l'état 74


État 54

   67 bloc: tLBRACE liste_instructions . tRBRACE

    tRBRACE  décalage et aller à l'état 75


État 55

   54 appel_fonction_void: tID tLPAR . liste_parametres_appel $@12 tRPAR tSEMI

    tINT   décalage et aller à l'état 76
    tVOID  décalage et aller à l'état 77
    tID    décalage et aller à l'état 46
    tNB    décalage et aller à l'état 47

    operand                 aller à l'état 78
    math_operation          aller à l'état 79
    appel_fonction          aller à l'état 51
    parametre_appel         aller à l'état 80
    liste_parametres_appel  aller à l'état 81


État 56

   43 affectation_variable: tID $@7 . tASSIGN liste_math_operations tSEMI

    tASSIGN  décalage et aller à l'état 82


État 57

   17 liste_logical_operations: tLPAR . liste_logical_operations tRPAR andORdiff tLPAR liste_logical_operations tRPAR

    tLPAR  décalage et aller à l'état 57
    tID    décalage et aller à l'état 58
    tNB    décalage et aller à l'état 59

    logical_operation         aller à l'état 60
    liste_logical_operations  aller à l'état 83


État 58

    9 logical_operation: tID . logical_operator tID
   11                  | tID . logical_operator tNB

    tLT  décalage et aller à l'état 84
    tGT  décalage et aller à l'état 85
    tEQ  décalage et aller à l'état 86
    tGE  décalage et aller à l'état 87
    tLE  décalage et aller à l'état 88

    logical_operator  aller à l'état 89


État 59

   10 logical_operation: tNB . logical_operator tID

    tLT  décalage et aller à l'état 84
    tGT  décalage et aller à l'état 85
    tEQ  décalage et aller à l'état 86
    tGE  décalage et aller à l'état 87
    tLE  décalage et aller à l'état 88

    logical_operator  aller à l'état 90


État 60

   16 liste_logical_operations: logical_operation .
   18                         | logical_operation . liste_logical_operations

    tLPAR  décalage et aller à l'état 57
    tID    décalage et aller à l'état 58
    tNB    décalage et aller à l'état 59

    $défaut  réduction par utilisation de la règle 16 (liste_logical_operations)

    logical_operation         aller à l'état 60
    liste_logical_operations  aller à l'état 91


État 61

   34 my_if: tIF tLPAR liste_logical_operations . tRPAR $@2 bloc $@3 my_else

    tRPAR  décalage et aller à l'état 92


État 62

   37 my_while: tWHILE $@4 tLPAR . liste_logical_operations tRPAR $@5 bloc

    tLPAR  décalage et aller à l'état 57
    tID    décalage et aller à l'état 58
    tNB    décalage et aller à l'état 59

    logical_operation         aller à l'état 60
    liste_logical_operations  aller à l'état 93


État 63

   39 print: tPRINT tLPAR $@6 . liste_math_operations tRPAR tSEMI

    tID  décalage et aller à l'état 46
    tNB  décalage et aller à l'état 47

    operand                aller à l'état 48
    math_operation         aller à l'état 49
    liste_math_operations  aller à l'état 94
    appel_fonction         aller à l'état 51


État 64

   52 appel_fonction: tID tLPAR . liste_parametres_appel $@11 tRPAR

    tINT   décalage et aller à l'état 76
    tVOID  décalage et aller à l'état 77
    tID    décalage et aller à l'état 46
    tNB    décalage et aller à l'état 47

    operand                 aller à l'état 78
    math_operation          aller à l'état 79
    appel_fonction          aller à l'état 51
    parametre_appel         aller à l'état 80
    liste_parametres_appel  aller à l'état 95


État 65

   19 math_operator: tADD .

    $défaut  réduction par utilisation de la règle 19 (math_operator)


État 66

   20 math_operator: tSUB .

    $défaut  réduction par utilisation de la règle 20 (math_operator)


État 67

   21 math_operator: tMUL .

    $défaut  réduction par utilisation de la règle 21 (math_operator)


État 68

   22 math_operator: tDIV .

    $défaut  réduction par utilisation de la règle 22 (math_operator)


État 69

   24 math_operation: operand math_operator . $@1 operand

    $défaut  réduction par utilisation de la règle 23 ($@1)

    $@1  aller à l'état 96


État 70

   28 liste_math_operations: math_operation math_operator . liste_math_operations

    tID  décalage et aller à l'état 46
    tNB  décalage et aller à l'état 47

    operand                aller à l'état 48
    math_operation         aller à l'état 49
    liste_math_operations  aller à l'état 97
    appel_fonction         aller à l'état 51


État 71

   29 my_return: tRETURN liste_math_operations tSEMI .

    $défaut  réduction par utilisation de la règle 29 (my_return)


État 72

   41 initialisation_variable: tINT tID tASSIGN . liste_math_operations tSEMI

    tID  décalage et aller à l'état 46
    tNB  décalage et aller à l'état 47

    operand                aller à l'état 48
    math_operation         aller à l'état 49
    liste_math_operations  aller à l'état 98
    appel_fonction         aller à l'état 51


État 73

   40 declaration_variable: tINT tID tSEMI .

    $défaut  réduction par utilisation de la règle 40 (declaration_variable)


État 74

   65 liste_instructions: instruction liste_instructions .

    $défaut  réduction par utilisation de la règle 65 (liste_instructions)


État 75

   67 bloc: tLBRACE liste_instructions tRBRACE .

    $défaut  réduction par utilisation de la règle 67 (bloc)


État 76

   72 parametre_appel: tINT . operand

    tID  décalage et aller à l'état 46
    tNB  décalage et aller à l'état 47

    operand         aller à l'état 99
    math_operation  aller à l'état 79
    appel_fonction  aller à l'état 51


État 77

   74 parametre_appel: tVOID .

    $défaut  réduction par utilisation de la règle 74 (parametre_appel)


État 78

   24 math_operation: operand . math_operator $@1 operand
   73 parametre_appel: operand .

    tADD  décalage et aller à l'état 65
    tSUB  décalage et aller à l'état 66
    tMUL  décalage et aller à l'état 67
    tDIV  décalage et aller à l'état 68

    $défaut  réduction par utilisation de la règle 73 (parametre_appel)

    math_operator  aller à l'état 69


État 79

    2 operand: math_operation .

    $défaut  réduction par utilisation de la règle 2 (operand)


État 80

   75 liste_parametres_appel: parametre_appel .
   77                       | parametre_appel . $@13 tCOMMA liste_parametres_appel

    tCOMMA    réduction par utilisation de la règle 76 ($@13)
    $défaut  réduction par utilisation de la règle 75 (liste_parametres_appel)

    $@13  aller à l'état 100


État 81

   54 appel_fonction_void: tID tLPAR liste_parametres_appel . $@12 tRPAR tSEMI

    $défaut  réduction par utilisation de la règle 53 ($@12)

    $@12  aller à l'état 101


État 82

   43 affectation_variable: tID $@7 tASSIGN . liste_math_operations tSEMI

    tID  décalage et aller à l'état 46
    tNB  décalage et aller à l'état 47

    operand                aller à l'état 48
    math_operation         aller à l'état 49
    liste_math_operations  aller à l'état 102
    appel_fonction         aller à l'état 51


État 83

   17 liste_logical_operations: tLPAR liste_logical_operations . tRPAR andORdiff tLPAR liste_logical_operations tRPAR

    tRPAR  décalage et aller à l'état 103


État 84

    4 logical_operator: tLT .

    $défaut  réduction par utilisation de la règle 4 (logical_operator)


État 85

    5 logical_operator: tGT .

    $défaut  réduction par utilisation de la règle 5 (logical_operator)


État 86

    6 logical_operator: tEQ .

    $défaut  réduction par utilisation de la règle 6 (logical_operator)


État 87

    7 logical_operator: tGE .

    $défaut  réduction par utilisation de la règle 7 (logical_operator)


État 88

    8 logical_operator: tLE .

    $défaut  réduction par utilisation de la règle 8 (logical_operator)


État 89

    9 logical_operation: tID logical_operator . tID
   11                  | tID logical_operator . tNB

    tID  décalage et aller à l'état 104
    tNB  décalage et aller à l'état 105


État 90

   10 logical_operation: tNB logical_operator . tID

    tID  décalage et aller à l'état 106


État 91

   18 liste_logical_operations: logical_operation liste_logical_operations .

    $défaut  réduction par utilisation de la règle 18 (liste_logical_operations)


État 92

   34 my_if: tIF tLPAR liste_logical_operations tRPAR . $@2 bloc $@3 my_else

    $défaut  réduction par utilisation de la règle 32 ($@2)

    $@2  aller à l'état 107


État 93

   37 my_while: tWHILE $@4 tLPAR liste_logical_operations . tRPAR $@5 bloc

    tRPAR  décalage et aller à l'état 108


État 94

   39 print: tPRINT tLPAR $@6 liste_math_operations . tRPAR tSEMI

    tRPAR  décalage et aller à l'état 109


État 95

   52 appel_fonction: tID tLPAR liste_parametres_appel . $@11 tRPAR

    $défaut  réduction par utilisation de la règle 51 ($@11)

    $@11  aller à l'état 110


État 96

   24 math_operation: operand math_operator $@1 . operand

    tID  décalage et aller à l'état 46
    tNB  décalage et aller à l'état 47

    operand         aller à l'état 111
    math_operation  aller à l'état 79
    appel_fonction  aller à l'état 51


État 97

   28 liste_math_operations: math_operation math_operator liste_math_operations .

    $défaut  réduction par utilisation de la règle 28 (liste_math_operations)


État 98

   41 initialisation_variable: tINT tID tASSIGN liste_math_operations . tSEMI

    tSEMI  décalage et aller à l'état 112


État 99

   24 math_operation: operand . math_operator $@1 operand
   72 parametre_appel: tINT operand .

    tADD  décalage et aller à l'état 65
    tSUB  décalage et aller à l'état 66
    tMUL  décalage et aller à l'état 67
    tDIV  décalage et aller à l'état 68

    $défaut  réduction par utilisation de la règle 72 (parametre_appel)

    math_operator  aller à l'état 69


État 100

   77 liste_parametres_appel: parametre_appel $@13 . tCOMMA liste_parametres_appel

    tCOMMA  décalage et aller à l'état 113


État 101

   54 appel_fonction_void: tID tLPAR liste_parametres_appel $@12 . tRPAR tSEMI

    tRPAR  décalage et aller à l'état 114


État 102

   43 affectation_variable: tID $@7 tASSIGN liste_math_operations . tSEMI

    tSEMI  décalage et aller à l'état 115


État 103

   17 liste_logical_operations: tLPAR liste_logical_operations tRPAR . andORdiff tLPAR liste_logical_operations tRPAR

    tNE   décalage et aller à l'état 116
    tAND  décalage et aller à l'état 117
    tOR   décalage et aller à l'état 118

    $défaut  réduction par utilisation de la règle 12 (andORdiff)

    andORdiff  aller à l'état 119


État 104

    9 logical_operation: tID logical_operator tID .

    $défaut  réduction par utilisation de la règle 9 (logical_operation)


État 105

   11 logical_operation: tID logical_operator tNB .

    $défaut  réduction par utilisation de la règle 11 (logical_operation)


État 106

   10 logical_operation: tNB logical_operator tID .

    $défaut  réduction par utilisation de la règle 10 (logical_operation)


État 107

   34 my_if: tIF tLPAR liste_logical_operations tRPAR $@2 . bloc $@3 my_else

    tIF      décalage et aller à l'état 24
    tWHILE   décalage et aller à l'état 25
    tPRINT   décalage et aller à l'état 26
    tRETURN  décalage et aller à l'état 27
    tINT     décalage et aller à l'état 28
    tVOID    décalage et aller à l'état 2
    tLBRACE  décalage et aller à l'état 29
    tID      décalage et aller à l'état 30

    my_return                aller à l'état 31
    my_if                    aller à l'état 32
    my_while                 aller à l'état 33
    print                    aller à l'état 34
    declaration_variable     aller à l'état 35
    initialisation_variable  aller à l'état 36
    affectation_variable     aller à l'état 37
    declaration_fonction     aller à l'état 38
    appel_fonction_void      aller à l'état 39
    instruction              aller à l'état 40
    bloc                     aller à l'état 120


État 108

   37 my_while: tWHILE $@4 tLPAR liste_logical_operations tRPAR . $@5 bloc

    $défaut  réduction par utilisation de la règle 36 ($@5)

    $@5  aller à l'état 121


État 109

   39 print: tPRINT tLPAR $@6 liste_math_operations tRPAR . tSEMI

    tSEMI  décalage et aller à l'état 122


État 110

   52 appel_fonction: tID tLPAR liste_parametres_appel $@11 . tRPAR

    tRPAR  décalage et aller à l'état 123


État 111

   24 math_operation: operand . math_operator $@1 operand
   24               | operand math_operator $@1 operand .

    tADD  décalage et aller à l'état 65
    tSUB  décalage et aller à l'état 66
    tMUL  décalage et aller à l'état 67
    tDIV  décalage et aller à l'état 68

    tADD      [réduction par utilisation de la règle 24 (math_operation)]
    tSUB      [réduction par utilisation de la règle 24 (math_operation)]
    tMUL      [réduction par utilisation de la règle 24 (math_operation)]
    tDIV      [réduction par utilisation de la règle 24 (math_operation)]
    $défaut  réduction par utilisation de la règle 24 (math_operation)

    math_operator  aller à l'état 69


État 112

   41 initialisation_variable: tINT tID tASSIGN liste_math_operations tSEMI .

    $défaut  réduction par utilisation de la règle 41 (initialisation_variable)


État 113

   77 liste_parametres_appel: parametre_appel $@13 tCOMMA . liste_parametres_appel

    tINT   décalage et aller à l'état 76
    tVOID  décalage et aller à l'état 77
    tID    décalage et aller à l'état 46
    tNB    décalage et aller à l'état 47

    operand                 aller à l'état 78
    math_operation          aller à l'état 79
    appel_fonction          aller à l'état 51
    parametre_appel         aller à l'état 80
    liste_parametres_appel  aller à l'état 124


État 114

   54 appel_fonction_void: tID tLPAR liste_parametres_appel $@12 tRPAR . tSEMI

    tSEMI  décalage et aller à l'état 125


État 115

   43 affectation_variable: tID $@7 tASSIGN liste_math_operations tSEMI .

    $défaut  réduction par utilisation de la règle 43 (affectation_variable)


État 116

   15 andORdiff: tNE .

    $défaut  réduction par utilisation de la règle 15 (andORdiff)


État 117

   13 andORdiff: tAND .

    $défaut  réduction par utilisation de la règle 13 (andORdiff)


État 118

   14 andORdiff: tOR .

    $défaut  réduction par utilisation de la règle 14 (andORdiff)


État 119

   17 liste_logical_operations: tLPAR liste_logical_operations tRPAR andORdiff . tLPAR liste_logical_operations tRPAR

    tLPAR  décalage et aller à l'état 126


État 120

   34 my_if: tIF tLPAR liste_logical_operations tRPAR $@2 bloc . $@3 my_else

    $défaut  réduction par utilisation de la règle 33 ($@3)

    $@3  aller à l'état 127


État 121

   37 my_while: tWHILE $@4 tLPAR liste_logical_operations tRPAR $@5 . bloc

    tIF      décalage et aller à l'état 24
    tWHILE   décalage et aller à l'état 25
    tPRINT   décalage et aller à l'état 26
    tRETURN  décalage et aller à l'état 27
    tINT     décalage et aller à l'état 28
    tVOID    décalage et aller à l'état 2
    tLBRACE  décalage et aller à l'état 29
    tID      décalage et aller à l'état 30

    my_return                aller à l'état 31
    my_if                    aller à l'état 32
    my_while                 aller à l'état 33
    print                    aller à l'état 34
    declaration_variable     aller à l'état 35
    initialisation_variable  aller à l'état 36
    affectation_variable     aller à l'état 37
    declaration_fonction     aller à l'état 38
    appel_fonction_void      aller à l'état 39
    instruction              aller à l'état 40
    bloc                     aller à l'état 128


État 122

   39 print: tPRINT tLPAR $@6 liste_math_operations tRPAR tSEMI .

    $défaut  réduction par utilisation de la règle 39 (print)


État 123

   52 appel_fonction: tID tLPAR liste_parametres_appel $@11 tRPAR .

    $défaut  réduction par utilisation de la règle 52 (appel_fonction)


État 124

   77 liste_parametres_appel: parametre_appel $@13 tCOMMA liste_parametres_appel .

    $défaut  réduction par utilisation de la règle 77 (liste_parametres_appel)


État 125

   54 appel_fonction_void: tID tLPAR liste_parametres_appel $@12 tRPAR tSEMI .

    $défaut  réduction par utilisation de la règle 54 (appel_fonction_void)


État 126

   17 liste_logical_operations: tLPAR liste_logical_operations tRPAR andORdiff tLPAR . liste_logical_operations tRPAR

    tLPAR  décalage et aller à l'état 57
    tID    décalage et aller à l'état 58
    tNB    décalage et aller à l'état 59

    logical_operation         aller à l'état 60
    liste_logical_operations  aller à l'état 129


État 127

   34 my_if: tIF tLPAR liste_logical_operations tRPAR $@2 bloc $@3 . my_else

    tELSE  décalage et aller à l'état 130

    tELSE     [réduction par utilisation de la règle 30 (my_else)]
    $défaut  réduction par utilisation de la règle 30 (my_else)

    my_else  aller à l'état 131


État 128

   37 my_while: tWHILE $@4 tLPAR liste_logical_operations tRPAR $@5 bloc .

    $défaut  réduction par utilisation de la règle 37 (my_while)


État 129

   17 liste_logical_operations: tLPAR liste_logical_operations tRPAR andORdiff tLPAR liste_logical_operations . tRPAR

    tRPAR  décalage et aller à l'état 132


État 130

   31 my_else: tELSE . bloc

    tIF      décalage et aller à l'état 24
    tWHILE   décalage et aller à l'état 25
    tPRINT   décalage et aller à l'état 26
    tRETURN  décalage et aller à l'état 27
    tINT     décalage et aller à l'état 28
    tVOID    décalage et aller à l'état 2
    tLBRACE  décalage et aller à l'état 29
    tID      décalage et aller à l'état 30

    my_return                aller à l'état 31
    my_if                    aller à l'état 32
    my_while                 aller à l'état 33
    print                    aller à l'état 34
    declaration_variable     aller à l'état 35
    initialisation_variable  aller à l'état 36
    affectation_variable     aller à l'état 37
    declaration_fonction     aller à l'état 38
    appel_fonction_void      aller à l'état 39
    instruction              aller à l'état 40
    bloc                     aller à l'état 133


État 131

   34 my_if: tIF tLPAR liste_logical_operations tRPAR $@2 bloc $@3 my_else .

    $défaut  réduction par utilisation de la règle 34 (my_if)


État 132

   17 liste_logical_operations: tLPAR liste_logical_operations tRPAR andORdiff tLPAR liste_logical_operations tRPAR .

    $défaut  réduction par utilisation de la règle 17 (liste_logical_operations)


État 133

   31 my_else: tELSE bloc .

    $défaut  réduction par utilisation de la règle 31 (my_else)
