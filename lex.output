Non-terminaux inutiles dans la grammaire

    logical_operation2
    programme
    liste_blocs
    liste_id_dec
    listeID
    bracket


Terminaux inutilisés dans la grammaire

    tNOT


Règles inutiles dans la grammaire

   73 logical_operation2: liste_math_operations logical_operator liste_math_operations
   74                   | tNOT logical_operation

   75 programme: liste_blocs

   76 liste_blocs: bloc
   77            | bloc liste_blocs

   78 liste_id_dec: tINT tID tCOMMA liste_id_dec

   79 listeID: tID
   80        | tID listeID

   81 initialisation_variable: tINT liste_id_dec tASSIGN liste_math_operations tSEMI

   82 bracket: tLBRACE
   83        | tRBRACE


Règles inutiles dans l'analyseur à cause de conflits

   25 liste_math_operations: math_operation


État 30 conflits: 1 décalage/réduction
État 48 conflits: 4 décalage/réduction, 2 réduction/réduction
État 102 conflits: 4 décalage/réduction


Grammaire

    0 $accept: declaration_fonctions $end

    1 operand: tNB
    2        | math_operation
    3        | tID

    4 logical_operator: tLT
    5                 | tGT
    6                 | tNE
    7                 | tEQ
    8                 | tGE
    9                 | tLE
   10                 | tAND
   11                 | tOR

   12 logical_operation: tID logical_operator tID
   13                  | tNB logical_operator tID
   14                  | tID logical_operator tNB

   15 liste_logical_operations: logical_operation
   16                         | logical_operation liste_logical_operations

   17 math_operator: tADD
   18              | tSUB
   19              | tMUL
   20              | tDIV

   21 $@1: %empty

   22 math_operation: operand math_operator $@1 operand
   23               | appel_fonction

   24 liste_math_operations: operand
   25                      | math_operation
   26                      | math_operation math_operator liste_math_operations

   27 my_return: tRETURN liste_math_operations tSEMI

   28 $@2: %empty

   29 $@3: %empty

   30 $@4: %empty

   31 my_if: tIF $@2 tLPAR $@3 liste_logical_operations tRPAR $@4 bloc
   32      | my_if tELSE bloc

   33 $@5: %empty

   34 $@6: %empty

   35 $@7: %empty

   36 my_while: tWHILE $@5 tLPAR $@6 liste_logical_operations tRPAR $@7 bloc

   37 print: tPRINT tLPAR liste_math_operations tRPAR tSEMI

   38 liste_id_aff: tID
   39             | tID tCOMMA liste_id_aff

   40 declaration_variable: tINT tID tSEMI

   41 initialisation_variable: tINT tID tASSIGN liste_math_operations tSEMI

   42 affectation_variable: liste_id_aff tASSIGN liste_math_operations tSEMI

   43 declaration_fonctions: declaration_fonction
   44                      | declaration_fonction declaration_fonctions

   45 $@8: %empty

   46 $@9: %empty

   47 declaration_fonction: tINT tID tLPAR liste_parametres_declaration $@8 tRPAR $@9 bloc
   48                     | tVOID tID tLPAR liste_parametres_declaration tRPAR bloc

   49 appel_fonction: tID tLPAR liste_parametres_appel tRPAR

   50 appel_fonction_void: tID tLPAR liste_parametres_appel tRPAR tSEMI

   51 instruction: declaration_variable
   52            | affectation_variable
   53            | initialisation_variable
   54            | declaration_fonction
   55            | appel_fonction_void
   56            | my_if
   57            | my_while
   58            | print
   59            | my_return

   60 liste_instructions: instruction
   61                   | instruction liste_instructions

   62 bloc: instruction
   63     | tLBRACE liste_instructions tRBRACE

   64 parametre_declaration: tINT tID
   65                      | tVOID

   66 liste_parametres_declaration: parametre_declaration
   67                             | parametre_declaration tCOMMA liste_parametres_declaration

   68 parametre_appel: tINT operand
   69                | operand
   70                | tVOID

   71 liste_parametres_appel: parametre_appel
   72                       | parametre_appel tCOMMA liste_parametres_appel


Terminaux, suivis des règles où ils apparaissent

    $end (0) 0
    error (256)
    tIF (258) 31
    tELSE (259) 32
    tWHILE (260) 36
    tPRINT (261) 37
    tRETURN (262) 27
    tINT (263) 40 41 47 64 68
    tVOID (264) 48 65 70
    tADD (265) 17
    tSUB (266) 18
    tMUL (267) 19
    tDIV (268) 20
    tLT (269) 4
    tGT (270) 5
    tNE (271) 6
    tEQ (272) 7
    tGE (273) 8
    tLE (274) 9
    tASSIGN (275) 41 42
    tAND (276) 10
    tOR (277) 11
    tNOT (278)
    tLBRACE (279) 63
    tRBRACE (280) 63
    tLPAR (281) 31 36 37 47 48 49 50
    tRPAR (282) 31 36 37 47 48 49 50
    tSEMI (283) 27 37 40 41 42 50
    tCOMMA (284) 39 67 72
    tID <s> (285) 3 12 13 14 38 39 40 41 47 48 49 50 64
    tNB <t_int> (286) 1 13 14


Non-terminaux, suivis des règles où ils apparaissent

    $accept (32)
        à gauche: 0
    operand (33)
        à gauche: 1 2 3
        à droite: 22 24 68 69
    logical_operator (34)
        à gauche: 4 5 6 7 8 9 10 11
        à droite: 12 13 14
    logical_operation (35)
        à gauche: 12 13 14
        à droite: 15 16
    liste_logical_operations (36)
        à gauche: 15 16
        à droite: 16 31 36
    math_operator (37)
        à gauche: 17 18 19 20
        à droite: 22 26
    math_operation (38)
        à gauche: 22 23
        à droite: 2 25 26
    $@1 (39)
        à gauche: 21
        à droite: 22
    liste_math_operations (40)
        à gauche: 24 25 26
        à droite: 26 27 37 41 42
    my_return (41)
        à gauche: 27
        à droite: 59
    my_if (42)
        à gauche: 31 32
        à droite: 32 56
    $@2 (43)
        à gauche: 28
        à droite: 31
    $@3 (44)
        à gauche: 29
        à droite: 31
    $@4 (45)
        à gauche: 30
        à droite: 31
    my_while (46)
        à gauche: 36
        à droite: 57
    $@5 (47)
        à gauche: 33
        à droite: 36
    $@6 (48)
        à gauche: 34
        à droite: 36
    $@7 (49)
        à gauche: 35
        à droite: 36
    print (50)
        à gauche: 37
        à droite: 58
    liste_id_aff (51)
        à gauche: 38 39
        à droite: 39 42
    declaration_variable (52)
        à gauche: 40
        à droite: 51
    initialisation_variable (53)
        à gauche: 41
        à droite: 53
    affectation_variable (54)
        à gauche: 42
        à droite: 52
    declaration_fonctions (55)
        à gauche: 43 44
        à droite: 0 44
    declaration_fonction (56)
        à gauche: 47 48
        à droite: 43 44 54
    $@8 (57)
        à gauche: 45
        à droite: 47
    $@9 (58)
        à gauche: 46
        à droite: 47
    appel_fonction (59)
        à gauche: 49
        à droite: 23
    appel_fonction_void (60)
        à gauche: 50
        à droite: 55
    instruction (61)
        à gauche: 51 52 53 54 55 56 57 58 59
        à droite: 60 61 62
    liste_instructions (62)
        à gauche: 60 61
        à droite: 61 63
    bloc (63)
        à gauche: 62 63
        à droite: 31 32 36 47 48
    parametre_declaration (64)
        à gauche: 64 65
        à droite: 66 67
    liste_parametres_declaration (65)
        à gauche: 66 67
        à droite: 47 48 67
    parametre_appel (66)
        à gauche: 68 69 70
        à droite: 71 72
    liste_parametres_appel (67)
        à gauche: 71 72
        à droite: 49 50 72


État 0

    0 $accept: . declaration_fonctions $end

    tINT   décalage et aller à l'état 1
    tVOID  décalage et aller à l'état 2

    declaration_fonctions  aller à l'état 3
    declaration_fonction   aller à l'état 4


État 1

   47 declaration_fonction: tINT . tID tLPAR liste_parametres_declaration $@8 tRPAR $@9 bloc

    tID  décalage et aller à l'état 5


État 2

   48 declaration_fonction: tVOID . tID tLPAR liste_parametres_declaration tRPAR bloc

    tID  décalage et aller à l'état 6


État 3

    0 $accept: declaration_fonctions . $end

    $end  décalage et aller à l'état 7


État 4

   43 declaration_fonctions: declaration_fonction .
   44                      | declaration_fonction . declaration_fonctions

    tINT   décalage et aller à l'état 1
    tVOID  décalage et aller à l'état 2

    $défaut  réduction par utilisation de la règle 43 (declaration_fonctions)

    declaration_fonctions  aller à l'état 8
    declaration_fonction   aller à l'état 4


État 5

   47 declaration_fonction: tINT tID . tLPAR liste_parametres_declaration $@8 tRPAR $@9 bloc

    tLPAR  décalage et aller à l'état 9


État 6

   48 declaration_fonction: tVOID tID . tLPAR liste_parametres_declaration tRPAR bloc

    tLPAR  décalage et aller à l'état 10


État 7

    0 $accept: declaration_fonctions $end .

    $défaut  accepter


État 8

   44 declaration_fonctions: declaration_fonction declaration_fonctions .

    $défaut  réduction par utilisation de la règle 44 (declaration_fonctions)


État 9

   47 declaration_fonction: tINT tID tLPAR . liste_parametres_declaration $@8 tRPAR $@9 bloc

    tINT   décalage et aller à l'état 11
    tVOID  décalage et aller à l'état 12

    parametre_declaration         aller à l'état 13
    liste_parametres_declaration  aller à l'état 14


État 10

   48 declaration_fonction: tVOID tID tLPAR . liste_parametres_declaration tRPAR bloc

    tINT   décalage et aller à l'état 11
    tVOID  décalage et aller à l'état 12

    parametre_declaration         aller à l'état 13
    liste_parametres_declaration  aller à l'état 15


État 11

   64 parametre_declaration: tINT . tID

    tID  décalage et aller à l'état 16


État 12

   65 parametre_declaration: tVOID .

    $défaut  réduction par utilisation de la règle 65 (parametre_declaration)


État 13

   66 liste_parametres_declaration: parametre_declaration .
   67                             | parametre_declaration . tCOMMA liste_parametres_declaration

    tCOMMA  décalage et aller à l'état 17

    $défaut  réduction par utilisation de la règle 66 (liste_parametres_declaration)


État 14

   47 declaration_fonction: tINT tID tLPAR liste_parametres_declaration . $@8 tRPAR $@9 bloc

    $défaut  réduction par utilisation de la règle 45 ($@8)

    $@8  aller à l'état 18


État 15

   48 declaration_fonction: tVOID tID tLPAR liste_parametres_declaration . tRPAR bloc

    tRPAR  décalage et aller à l'état 19


État 16

   64 parametre_declaration: tINT tID .

    $défaut  réduction par utilisation de la règle 64 (parametre_declaration)


État 17

   67 liste_parametres_declaration: parametre_declaration tCOMMA . liste_parametres_declaration

    tINT   décalage et aller à l'état 11
    tVOID  décalage et aller à l'état 12

    parametre_declaration         aller à l'état 13
    liste_parametres_declaration  aller à l'état 20


État 18

   47 declaration_fonction: tINT tID tLPAR liste_parametres_declaration $@8 . tRPAR $@9 bloc

    tRPAR  décalage et aller à l'état 21


État 19

   48 declaration_fonction: tVOID tID tLPAR liste_parametres_declaration tRPAR . bloc

    tIF      décalage et aller à l'état 22
    tWHILE   décalage et aller à l'état 23
    tPRINT   décalage et aller à l'état 24
    tRETURN  décalage et aller à l'état 25
    tINT     décalage et aller à l'état 26
    tVOID    décalage et aller à l'état 2
    tLBRACE  décalage et aller à l'état 27
    tID      décalage et aller à l'état 28

    my_return                aller à l'état 29
    my_if                    aller à l'état 30
    my_while                 aller à l'état 31
    print                    aller à l'état 32
    liste_id_aff             aller à l'état 33
    declaration_variable     aller à l'état 34
    initialisation_variable  aller à l'état 35
    affectation_variable     aller à l'état 36
    declaration_fonction     aller à l'état 37
    appel_fonction_void      aller à l'état 38
    instruction              aller à l'état 39
    bloc                     aller à l'état 40


État 20

   67 liste_parametres_declaration: parametre_declaration tCOMMA liste_parametres_declaration .

    $défaut  réduction par utilisation de la règle 67 (liste_parametres_declaration)


État 21

   47 declaration_fonction: tINT tID tLPAR liste_parametres_declaration $@8 tRPAR . $@9 bloc

    $défaut  réduction par utilisation de la règle 46 ($@9)

    $@9  aller à l'état 41


État 22

   31 my_if: tIF . $@2 tLPAR $@3 liste_logical_operations tRPAR $@4 bloc

    $défaut  réduction par utilisation de la règle 28 ($@2)

    $@2  aller à l'état 42


État 23

   36 my_while: tWHILE . $@5 tLPAR $@6 liste_logical_operations tRPAR $@7 bloc

    $défaut  réduction par utilisation de la règle 33 ($@5)

    $@5  aller à l'état 43


État 24

   37 print: tPRINT . tLPAR liste_math_operations tRPAR tSEMI

    tLPAR  décalage et aller à l'état 44


État 25

   27 my_return: tRETURN . liste_math_operations tSEMI

    tID  décalage et aller à l'état 45
    tNB  décalage et aller à l'état 46

    operand                aller à l'état 47
    math_operation         aller à l'état 48
    liste_math_operations  aller à l'état 49
    appel_fonction         aller à l'état 50


État 26

   40 declaration_variable: tINT . tID tSEMI
   41 initialisation_variable: tINT . tID tASSIGN liste_math_operations tSEMI
   47 declaration_fonction: tINT . tID tLPAR liste_parametres_declaration $@8 tRPAR $@9 bloc

    tID  décalage et aller à l'état 51


État 27

   63 bloc: tLBRACE . liste_instructions tRBRACE

    tIF      décalage et aller à l'état 22
    tWHILE   décalage et aller à l'état 23
    tPRINT   décalage et aller à l'état 24
    tRETURN  décalage et aller à l'état 25
    tINT     décalage et aller à l'état 26
    tVOID    décalage et aller à l'état 2
    tID      décalage et aller à l'état 28

    my_return                aller à l'état 29
    my_if                    aller à l'état 30
    my_while                 aller à l'état 31
    print                    aller à l'état 32
    liste_id_aff             aller à l'état 33
    declaration_variable     aller à l'état 34
    initialisation_variable  aller à l'état 35
    affectation_variable     aller à l'état 36
    declaration_fonction     aller à l'état 37
    appel_fonction_void      aller à l'état 38
    instruction              aller à l'état 52
    liste_instructions       aller à l'état 53


État 28

   38 liste_id_aff: tID .
   39             | tID . tCOMMA liste_id_aff
   50 appel_fonction_void: tID . tLPAR liste_parametres_appel tRPAR tSEMI

    tLPAR   décalage et aller à l'état 54
    tCOMMA  décalage et aller à l'état 55

    $défaut  réduction par utilisation de la règle 38 (liste_id_aff)


État 29

   59 instruction: my_return .

    $défaut  réduction par utilisation de la règle 59 (instruction)


État 30

   32 my_if: my_if . tELSE bloc
   56 instruction: my_if .

    tELSE  décalage et aller à l'état 56

    tELSE     [réduction par utilisation de la règle 56 (instruction)]
    $défaut  réduction par utilisation de la règle 56 (instruction)


État 31

   57 instruction: my_while .

    $défaut  réduction par utilisation de la règle 57 (instruction)


État 32

   58 instruction: print .

    $défaut  réduction par utilisation de la règle 58 (instruction)


État 33

   42 affectation_variable: liste_id_aff . tASSIGN liste_math_operations tSEMI

    tASSIGN  décalage et aller à l'état 57


État 34

   51 instruction: declaration_variable .

    $défaut  réduction par utilisation de la règle 51 (instruction)


État 35

   53 instruction: initialisation_variable .

    $défaut  réduction par utilisation de la règle 53 (instruction)


État 36

   52 instruction: affectation_variable .

    $défaut  réduction par utilisation de la règle 52 (instruction)


État 37

   54 instruction: declaration_fonction .

    $défaut  réduction par utilisation de la règle 54 (instruction)


État 38

   55 instruction: appel_fonction_void .

    $défaut  réduction par utilisation de la règle 55 (instruction)


État 39

   62 bloc: instruction .

    $défaut  réduction par utilisation de la règle 62 (bloc)


État 40

   48 declaration_fonction: tVOID tID tLPAR liste_parametres_declaration tRPAR bloc .

    $défaut  réduction par utilisation de la règle 48 (declaration_fonction)


État 41

   47 declaration_fonction: tINT tID tLPAR liste_parametres_declaration $@8 tRPAR $@9 . bloc

    tIF      décalage et aller à l'état 22
    tWHILE   décalage et aller à l'état 23
    tPRINT   décalage et aller à l'état 24
    tRETURN  décalage et aller à l'état 25
    tINT     décalage et aller à l'état 26
    tVOID    décalage et aller à l'état 2
    tLBRACE  décalage et aller à l'état 27
    tID      décalage et aller à l'état 28

    my_return                aller à l'état 29
    my_if                    aller à l'état 30
    my_while                 aller à l'état 31
    print                    aller à l'état 32
    liste_id_aff             aller à l'état 33
    declaration_variable     aller à l'état 34
    initialisation_variable  aller à l'état 35
    affectation_variable     aller à l'état 36
    declaration_fonction     aller à l'état 37
    appel_fonction_void      aller à l'état 38
    instruction              aller à l'état 39
    bloc                     aller à l'état 58


État 42

   31 my_if: tIF $@2 . tLPAR $@3 liste_logical_operations tRPAR $@4 bloc

    tLPAR  décalage et aller à l'état 59


État 43

   36 my_while: tWHILE $@5 . tLPAR $@6 liste_logical_operations tRPAR $@7 bloc

    tLPAR  décalage et aller à l'état 60


État 44

   37 print: tPRINT tLPAR . liste_math_operations tRPAR tSEMI

    tID  décalage et aller à l'état 45
    tNB  décalage et aller à l'état 46

    operand                aller à l'état 47
    math_operation         aller à l'état 48
    liste_math_operations  aller à l'état 61
    appel_fonction         aller à l'état 50


État 45

    3 operand: tID .
   49 appel_fonction: tID . tLPAR liste_parametres_appel tRPAR

    tLPAR  décalage et aller à l'état 62

    $défaut  réduction par utilisation de la règle 3 (operand)


État 46

    1 operand: tNB .

    $défaut  réduction par utilisation de la règle 1 (operand)


État 47

   22 math_operation: operand . math_operator $@1 operand
   24 liste_math_operations: operand .

    tADD  décalage et aller à l'état 63
    tSUB  décalage et aller à l'état 64
    tMUL  décalage et aller à l'état 65
    tDIV  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 24 (liste_math_operations)

    math_operator  aller à l'état 67


État 48

    2 operand: math_operation .
   25 liste_math_operations: math_operation .
   26                      | math_operation . math_operator liste_math_operations

    tADD  décalage et aller à l'état 63
    tSUB  décalage et aller à l'état 64
    tMUL  décalage et aller à l'état 65
    tDIV  décalage et aller à l'état 66

    tADD      [réduction par utilisation de la règle 2 (operand)]
    tSUB      [réduction par utilisation de la règle 2 (operand)]
    tMUL      [réduction par utilisation de la règle 2 (operand)]
    tDIV      [réduction par utilisation de la règle 2 (operand)]
    tRPAR     réduction par utilisation de la règle 2 (operand)
    tRPAR     [réduction par utilisation de la règle 25 (liste_math_operations)]
    tSEMI     réduction par utilisation de la règle 2 (operand)
    tSEMI     [réduction par utilisation de la règle 25 (liste_math_operations)]
    $défaut  réduction par utilisation de la règle 2 (operand)

    math_operator  aller à l'état 68


État 49

   27 my_return: tRETURN liste_math_operations . tSEMI

    tSEMI  décalage et aller à l'état 69


État 50

   23 math_operation: appel_fonction .

    $défaut  réduction par utilisation de la règle 23 (math_operation)


État 51

   40 declaration_variable: tINT tID . tSEMI
   41 initialisation_variable: tINT tID . tASSIGN liste_math_operations tSEMI
   47 declaration_fonction: tINT tID . tLPAR liste_parametres_declaration $@8 tRPAR $@9 bloc

    tASSIGN  décalage et aller à l'état 70
    tLPAR    décalage et aller à l'état 9
    tSEMI    décalage et aller à l'état 71


État 52

   60 liste_instructions: instruction .
   61                   | instruction . liste_instructions

    tIF      décalage et aller à l'état 22
    tWHILE   décalage et aller à l'état 23
    tPRINT   décalage et aller à l'état 24
    tRETURN  décalage et aller à l'état 25
    tINT     décalage et aller à l'état 26
    tVOID    décalage et aller à l'état 2
    tID      décalage et aller à l'état 28

    $défaut  réduction par utilisation de la règle 60 (liste_instructions)

    my_return                aller à l'état 29
    my_if                    aller à l'état 30
    my_while                 aller à l'état 31
    print                    aller à l'état 32
    liste_id_aff             aller à l'état 33
    declaration_variable     aller à l'état 34
    initialisation_variable  aller à l'état 35
    affectation_variable     aller à l'état 36
    declaration_fonction     aller à l'état 37
    appel_fonction_void      aller à l'état 38
    instruction              aller à l'état 52
    liste_instructions       aller à l'état 72


État 53

   63 bloc: tLBRACE liste_instructions . tRBRACE

    tRBRACE  décalage et aller à l'état 73


État 54

   50 appel_fonction_void: tID tLPAR . liste_parametres_appel tRPAR tSEMI

    tINT   décalage et aller à l'état 74
    tVOID  décalage et aller à l'état 75
    tID    décalage et aller à l'état 45
    tNB    décalage et aller à l'état 46

    operand                 aller à l'état 76
    math_operation          aller à l'état 77
    appel_fonction          aller à l'état 50
    parametre_appel         aller à l'état 78
    liste_parametres_appel  aller à l'état 79


État 55

   39 liste_id_aff: tID tCOMMA . liste_id_aff

    tID  décalage et aller à l'état 80

    liste_id_aff  aller à l'état 81


État 56

   32 my_if: my_if tELSE . bloc

    tIF      décalage et aller à l'état 22
    tWHILE   décalage et aller à l'état 23
    tPRINT   décalage et aller à l'état 24
    tRETURN  décalage et aller à l'état 25
    tINT     décalage et aller à l'état 26
    tVOID    décalage et aller à l'état 2
    tLBRACE  décalage et aller à l'état 27
    tID      décalage et aller à l'état 28

    my_return                aller à l'état 29
    my_if                    aller à l'état 30
    my_while                 aller à l'état 31
    print                    aller à l'état 32
    liste_id_aff             aller à l'état 33
    declaration_variable     aller à l'état 34
    initialisation_variable  aller à l'état 35
    affectation_variable     aller à l'état 36
    declaration_fonction     aller à l'état 37
    appel_fonction_void      aller à l'état 38
    instruction              aller à l'état 39
    bloc                     aller à l'état 82


État 57

   42 affectation_variable: liste_id_aff tASSIGN . liste_math_operations tSEMI

    tID  décalage et aller à l'état 45
    tNB  décalage et aller à l'état 46

    operand                aller à l'état 47
    math_operation         aller à l'état 48
    liste_math_operations  aller à l'état 83
    appel_fonction         aller à l'état 50


État 58

   47 declaration_fonction: tINT tID tLPAR liste_parametres_declaration $@8 tRPAR $@9 bloc .

    $défaut  réduction par utilisation de la règle 47 (declaration_fonction)


État 59

   31 my_if: tIF $@2 tLPAR . $@3 liste_logical_operations tRPAR $@4 bloc

    $défaut  réduction par utilisation de la règle 29 ($@3)

    $@3  aller à l'état 84


État 60

   36 my_while: tWHILE $@5 tLPAR . $@6 liste_logical_operations tRPAR $@7 bloc

    $défaut  réduction par utilisation de la règle 34 ($@6)

    $@6  aller à l'état 85


État 61

   37 print: tPRINT tLPAR liste_math_operations . tRPAR tSEMI

    tRPAR  décalage et aller à l'état 86


État 62

   49 appel_fonction: tID tLPAR . liste_parametres_appel tRPAR

    tINT   décalage et aller à l'état 74
    tVOID  décalage et aller à l'état 75
    tID    décalage et aller à l'état 45
    tNB    décalage et aller à l'état 46

    operand                 aller à l'état 76
    math_operation          aller à l'état 77
    appel_fonction          aller à l'état 50
    parametre_appel         aller à l'état 78
    liste_parametres_appel  aller à l'état 87


État 63

   17 math_operator: tADD .

    $défaut  réduction par utilisation de la règle 17 (math_operator)


État 64

   18 math_operator: tSUB .

    $défaut  réduction par utilisation de la règle 18 (math_operator)


État 65

   19 math_operator: tMUL .

    $défaut  réduction par utilisation de la règle 19 (math_operator)


État 66

   20 math_operator: tDIV .

    $défaut  réduction par utilisation de la règle 20 (math_operator)


État 67

   22 math_operation: operand math_operator . $@1 operand

    $défaut  réduction par utilisation de la règle 21 ($@1)

    $@1  aller à l'état 88


État 68

   26 liste_math_operations: math_operation math_operator . liste_math_operations

    tID  décalage et aller à l'état 45
    tNB  décalage et aller à l'état 46

    operand                aller à l'état 47
    math_operation         aller à l'état 48
    liste_math_operations  aller à l'état 89
    appel_fonction         aller à l'état 50


État 69

   27 my_return: tRETURN liste_math_operations tSEMI .

    $défaut  réduction par utilisation de la règle 27 (my_return)


État 70

   41 initialisation_variable: tINT tID tASSIGN . liste_math_operations tSEMI

    tID  décalage et aller à l'état 45
    tNB  décalage et aller à l'état 46

    operand                aller à l'état 47
    math_operation         aller à l'état 48
    liste_math_operations  aller à l'état 90
    appel_fonction         aller à l'état 50


État 71

   40 declaration_variable: tINT tID tSEMI .

    $défaut  réduction par utilisation de la règle 40 (declaration_variable)


État 72

   61 liste_instructions: instruction liste_instructions .

    $défaut  réduction par utilisation de la règle 61 (liste_instructions)


État 73

   63 bloc: tLBRACE liste_instructions tRBRACE .

    $défaut  réduction par utilisation de la règle 63 (bloc)


État 74

   68 parametre_appel: tINT . operand

    tID  décalage et aller à l'état 45
    tNB  décalage et aller à l'état 46

    operand         aller à l'état 91
    math_operation  aller à l'état 77
    appel_fonction  aller à l'état 50


État 75

   70 parametre_appel: tVOID .

    $défaut  réduction par utilisation de la règle 70 (parametre_appel)


État 76

   22 math_operation: operand . math_operator $@1 operand
   69 parametre_appel: operand .

    tADD  décalage et aller à l'état 63
    tSUB  décalage et aller à l'état 64
    tMUL  décalage et aller à l'état 65
    tDIV  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 69 (parametre_appel)

    math_operator  aller à l'état 67


État 77

    2 operand: math_operation .

    $défaut  réduction par utilisation de la règle 2 (operand)


État 78

   71 liste_parametres_appel: parametre_appel .
   72                       | parametre_appel . tCOMMA liste_parametres_appel

    tCOMMA  décalage et aller à l'état 92

    $défaut  réduction par utilisation de la règle 71 (liste_parametres_appel)


État 79

   50 appel_fonction_void: tID tLPAR liste_parametres_appel . tRPAR tSEMI

    tRPAR  décalage et aller à l'état 93


État 80

   38 liste_id_aff: tID .
   39             | tID . tCOMMA liste_id_aff

    tCOMMA  décalage et aller à l'état 55

    $défaut  réduction par utilisation de la règle 38 (liste_id_aff)


État 81

   39 liste_id_aff: tID tCOMMA liste_id_aff .

    $défaut  réduction par utilisation de la règle 39 (liste_id_aff)


État 82

   32 my_if: my_if tELSE bloc .

    $défaut  réduction par utilisation de la règle 32 (my_if)


État 83

   42 affectation_variable: liste_id_aff tASSIGN liste_math_operations . tSEMI

    tSEMI  décalage et aller à l'état 94


État 84

   31 my_if: tIF $@2 tLPAR $@3 . liste_logical_operations tRPAR $@4 bloc

    tID  décalage et aller à l'état 95
    tNB  décalage et aller à l'état 96

    logical_operation         aller à l'état 97
    liste_logical_operations  aller à l'état 98


État 85

   36 my_while: tWHILE $@5 tLPAR $@6 . liste_logical_operations tRPAR $@7 bloc

    tID  décalage et aller à l'état 95
    tNB  décalage et aller à l'état 96

    logical_operation         aller à l'état 97
    liste_logical_operations  aller à l'état 99


État 86

   37 print: tPRINT tLPAR liste_math_operations tRPAR . tSEMI

    tSEMI  décalage et aller à l'état 100


État 87

   49 appel_fonction: tID tLPAR liste_parametres_appel . tRPAR

    tRPAR  décalage et aller à l'état 101


État 88

   22 math_operation: operand math_operator $@1 . operand

    tID  décalage et aller à l'état 45
    tNB  décalage et aller à l'état 46

    operand         aller à l'état 102
    math_operation  aller à l'état 77
    appel_fonction  aller à l'état 50


État 89

   26 liste_math_operations: math_operation math_operator liste_math_operations .

    $défaut  réduction par utilisation de la règle 26 (liste_math_operations)


État 90

   41 initialisation_variable: tINT tID tASSIGN liste_math_operations . tSEMI

    tSEMI  décalage et aller à l'état 103


État 91

   22 math_operation: operand . math_operator $@1 operand
   68 parametre_appel: tINT operand .

    tADD  décalage et aller à l'état 63
    tSUB  décalage et aller à l'état 64
    tMUL  décalage et aller à l'état 65
    tDIV  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 68 (parametre_appel)

    math_operator  aller à l'état 67


État 92

   72 liste_parametres_appel: parametre_appel tCOMMA . liste_parametres_appel

    tINT   décalage et aller à l'état 74
    tVOID  décalage et aller à l'état 75
    tID    décalage et aller à l'état 45
    tNB    décalage et aller à l'état 46

    operand                 aller à l'état 76
    math_operation          aller à l'état 77
    appel_fonction          aller à l'état 50
    parametre_appel         aller à l'état 78
    liste_parametres_appel  aller à l'état 104


État 93

   50 appel_fonction_void: tID tLPAR liste_parametres_appel tRPAR . tSEMI

    tSEMI  décalage et aller à l'état 105


État 94

   42 affectation_variable: liste_id_aff tASSIGN liste_math_operations tSEMI .

    $défaut  réduction par utilisation de la règle 42 (affectation_variable)


État 95

   12 logical_operation: tID . logical_operator tID
   14                  | tID . logical_operator tNB

    tLT   décalage et aller à l'état 106
    tGT   décalage et aller à l'état 107
    tNE   décalage et aller à l'état 108
    tEQ   décalage et aller à l'état 109
    tGE   décalage et aller à l'état 110
    tLE   décalage et aller à l'état 111
    tAND  décalage et aller à l'état 112
    tOR   décalage et aller à l'état 113

    logical_operator  aller à l'état 114


État 96

   13 logical_operation: tNB . logical_operator tID

    tLT   décalage et aller à l'état 106
    tGT   décalage et aller à l'état 107
    tNE   décalage et aller à l'état 108
    tEQ   décalage et aller à l'état 109
    tGE   décalage et aller à l'état 110
    tLE   décalage et aller à l'état 111
    tAND  décalage et aller à l'état 112
    tOR   décalage et aller à l'état 113

    logical_operator  aller à l'état 115


État 97

   15 liste_logical_operations: logical_operation .
   16                         | logical_operation . liste_logical_operations

    tID  décalage et aller à l'état 95
    tNB  décalage et aller à l'état 96

    $défaut  réduction par utilisation de la règle 15 (liste_logical_operations)

    logical_operation         aller à l'état 97
    liste_logical_operations  aller à l'état 116


État 98

   31 my_if: tIF $@2 tLPAR $@3 liste_logical_operations . tRPAR $@4 bloc

    tRPAR  décalage et aller à l'état 117


État 99

   36 my_while: tWHILE $@5 tLPAR $@6 liste_logical_operations . tRPAR $@7 bloc

    tRPAR  décalage et aller à l'état 118


État 100

   37 print: tPRINT tLPAR liste_math_operations tRPAR tSEMI .

    $défaut  réduction par utilisation de la règle 37 (print)


État 101

   49 appel_fonction: tID tLPAR liste_parametres_appel tRPAR .

    $défaut  réduction par utilisation de la règle 49 (appel_fonction)


État 102

   22 math_operation: operand . math_operator $@1 operand
   22               | operand math_operator $@1 operand .

    tADD  décalage et aller à l'état 63
    tSUB  décalage et aller à l'état 64
    tMUL  décalage et aller à l'état 65
    tDIV  décalage et aller à l'état 66

    tADD      [réduction par utilisation de la règle 22 (math_operation)]
    tSUB      [réduction par utilisation de la règle 22 (math_operation)]
    tMUL      [réduction par utilisation de la règle 22 (math_operation)]
    tDIV      [réduction par utilisation de la règle 22 (math_operation)]
    $défaut  réduction par utilisation de la règle 22 (math_operation)

    math_operator  aller à l'état 67


État 103

   41 initialisation_variable: tINT tID tASSIGN liste_math_operations tSEMI .

    $défaut  réduction par utilisation de la règle 41 (initialisation_variable)


État 104

   72 liste_parametres_appel: parametre_appel tCOMMA liste_parametres_appel .

    $défaut  réduction par utilisation de la règle 72 (liste_parametres_appel)


État 105

   50 appel_fonction_void: tID tLPAR liste_parametres_appel tRPAR tSEMI .

    $défaut  réduction par utilisation de la règle 50 (appel_fonction_void)


État 106

    4 logical_operator: tLT .

    $défaut  réduction par utilisation de la règle 4 (logical_operator)


État 107

    5 logical_operator: tGT .

    $défaut  réduction par utilisation de la règle 5 (logical_operator)


État 108

    6 logical_operator: tNE .

    $défaut  réduction par utilisation de la règle 6 (logical_operator)


État 109

    7 logical_operator: tEQ .

    $défaut  réduction par utilisation de la règle 7 (logical_operator)


État 110

    8 logical_operator: tGE .

    $défaut  réduction par utilisation de la règle 8 (logical_operator)


État 111

    9 logical_operator: tLE .

    $défaut  réduction par utilisation de la règle 9 (logical_operator)


État 112

   10 logical_operator: tAND .

    $défaut  réduction par utilisation de la règle 10 (logical_operator)


État 113

   11 logical_operator: tOR .

    $défaut  réduction par utilisation de la règle 11 (logical_operator)


État 114

   12 logical_operation: tID logical_operator . tID
   14                  | tID logical_operator . tNB

    tID  décalage et aller à l'état 119
    tNB  décalage et aller à l'état 120


État 115

   13 logical_operation: tNB logical_operator . tID

    tID  décalage et aller à l'état 121


État 116

   16 liste_logical_operations: logical_operation liste_logical_operations .

    $défaut  réduction par utilisation de la règle 16 (liste_logical_operations)


État 117

   31 my_if: tIF $@2 tLPAR $@3 liste_logical_operations tRPAR . $@4 bloc

    $défaut  réduction par utilisation de la règle 30 ($@4)

    $@4  aller à l'état 122


État 118

   36 my_while: tWHILE $@5 tLPAR $@6 liste_logical_operations tRPAR . $@7 bloc

    $défaut  réduction par utilisation de la règle 35 ($@7)

    $@7  aller à l'état 123


État 119

   12 logical_operation: tID logical_operator tID .

    $défaut  réduction par utilisation de la règle 12 (logical_operation)


État 120

   14 logical_operation: tID logical_operator tNB .

    $défaut  réduction par utilisation de la règle 14 (logical_operation)


État 121

   13 logical_operation: tNB logical_operator tID .

    $défaut  réduction par utilisation de la règle 13 (logical_operation)


État 122

   31 my_if: tIF $@2 tLPAR $@3 liste_logical_operations tRPAR $@4 . bloc

    tIF      décalage et aller à l'état 22
    tWHILE   décalage et aller à l'état 23
    tPRINT   décalage et aller à l'état 24
    tRETURN  décalage et aller à l'état 25
    tINT     décalage et aller à l'état 26
    tVOID    décalage et aller à l'état 2
    tLBRACE  décalage et aller à l'état 27
    tID      décalage et aller à l'état 28

    my_return                aller à l'état 29
    my_if                    aller à l'état 30
    my_while                 aller à l'état 31
    print                    aller à l'état 32
    liste_id_aff             aller à l'état 33
    declaration_variable     aller à l'état 34
    initialisation_variable  aller à l'état 35
    affectation_variable     aller à l'état 36
    declaration_fonction     aller à l'état 37
    appel_fonction_void      aller à l'état 38
    instruction              aller à l'état 39
    bloc                     aller à l'état 124


État 123

   36 my_while: tWHILE $@5 tLPAR $@6 liste_logical_operations tRPAR $@7 . bloc

    tIF      décalage et aller à l'état 22
    tWHILE   décalage et aller à l'état 23
    tPRINT   décalage et aller à l'état 24
    tRETURN  décalage et aller à l'état 25
    tINT     décalage et aller à l'état 26
    tVOID    décalage et aller à l'état 2
    tLBRACE  décalage et aller à l'état 27
    tID      décalage et aller à l'état 28

    my_return                aller à l'état 29
    my_if                    aller à l'état 30
    my_while                 aller à l'état 31
    print                    aller à l'état 32
    liste_id_aff             aller à l'état 33
    declaration_variable     aller à l'état 34
    initialisation_variable  aller à l'état 35
    affectation_variable     aller à l'état 36
    declaration_fonction     aller à l'état 37
    appel_fonction_void      aller à l'état 38
    instruction              aller à l'état 39
    bloc                     aller à l'état 125


État 124

   31 my_if: tIF $@2 tLPAR $@3 liste_logical_operations tRPAR $@4 bloc .

    $défaut  réduction par utilisation de la règle 31 (my_if)


État 125

   36 my_while: tWHILE $@5 tLPAR $@6 liste_logical_operations tRPAR $@7 bloc .

    $défaut  réduction par utilisation de la règle 36 (my_while)
